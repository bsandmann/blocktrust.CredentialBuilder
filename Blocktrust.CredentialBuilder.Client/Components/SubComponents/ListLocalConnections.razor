@using Blocktrust.CredentialBuilder.Client.Models
@using Blocktrust.CredentialBuilder.Client.Models.Connections
@using Blocktrust.CredentialBuilder.Client.Services

<div class="pt-5 px-5 pb-3">
    <MudText Typo="Typo.subtitle2">Existing Connections</MudText>
    <ul class="mt-3">
        @if (Agent.Connections.Connections.Any())
        {
            @foreach (var connection in Agent.Connections.Connections)
            {
                @if (string.IsNullOrWhiteSpace(connection.Label) || connection.Label.Equals(ConnectionService.UnnamedConnectionLabel, StringComparison.InvariantCultureIgnoreCase))
                {
                    <li>
                        <MudStack Row="true">
                            @connection.ConnectionId
                            <MudTooltip Style="" Text="@GetTooltipText(connection)" Arrow="true" Placement="Placement.Bottom">
                                <MudIcon Icon="@Icons.Material.Filled.PrivateConnectivity" Size="Size.Small"/>
                            </MudTooltip>
                        </MudStack>
                    </li>
                }
                else
                {
                    <MudStack Row="true">
                        @connection.Label
                        <MudTooltip Style="" Text="@GetTooltipText(connection)" Arrow="true" Placement="Placement.Bottom">
                            <MudIcon Icon="@Icons.Material.Filled.PrivateConnectivity" Size="Size.Small"/>
                        </MudTooltip>
                    </MudStack>
                }
            }
        }
        else
        {
            <li>
                <em>No established connections</em>
            </li>
        }
    </ul>
</div>

@code {

    [Parameter]
    public Agent Agent { get; set; }

    private string GetTooltipText(EstablishedConnection connection)
    {
        return String.Concat("from ", connection.LocalPeerDid.Substring(0, 20), "... to ", connection.RemotePeerDid.Substring(0, 20),"...");
    }

}